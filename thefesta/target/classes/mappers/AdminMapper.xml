<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="AdminMapper">
 	<!-- member 테이블 회원정보 list -->
 	<select id="memberList" resultType="kr.co.thefesta.admin.domain.AdminDTO">
	 	<![CDATA[
			SELECT  id, statecode, finalaccess, reportnum, totalreportnum, rn
				FROM (
	    			SELECT id, statecode, finalaccess, reportnum, totalreportnum, rownum  as rn
	    			FROM (
                        SELECT *
                        FROM(
                            SELECT id,statecode,finalaccess, reportnum, totalreportnum
                            FROM admin_member_reportstate_2
                            UNION
                            SELECT id,statecode,finalaccess, reportnum, totalreportnum
                            FROM admin_member_reportstate_1
                            UNION
                            SELECT id,statecode,finalaccess, reportnum, totalreportnum
                            FROM admin_member_reportstate_0
                        )
				       ORDER BY totalreportnum DESC, statecode DESC
	    			)
				    WHERE rownum <= #{pageNum} * #{amount} AND statecode <> '0'
				)
			WHERE rn > (#{pageNum} -1) * #{amount}
	     ]]>
 	</select>
 	
 	<!-- member 회원 디테일 정보 -->
 	<select id="memberDetail" resultType="kr.co.thefesta.admin.domain.ReportDTO" parameterType="java.util.Map">
 	<![CDATA[
 		SELECT reportid,reportcontent,reporter,reported, rbrno, rfrno, rbid, reportdate, reportnum, statecode, finalaccess
		FROM(
    		SELECT reportid,reportcontent,reporter,reported, rbrno, rfrno, rbid, reportdate, reportnum, statecode, finalaccess, rownum  as rn
    		FROM (
        		SELECT  report.reportid, report.reportcontent, report.reporter, report.reported, report.rbrno, report.rfrno, report.rbid, report.reportdate,
        		member.statecode, member.finalaccess, member.reportnum
				FROM report
				INNER JOIN member
				ON report.reported = member.id
				WHERE member.id = #{id} AND report.reportstate = 2
				ORDER BY report.reportid DESC
    		)
    		WHERE rownum<=#{pageNum} * #{amount}
		)
		WHERE rn>(#{pageNum} -1) * #{amount}
	]]>
 	</select>
 	
 	<!-- 회원 총 갯수 -->
 	<select id="memberCnt" resultType="int">
 	<![CDATA[
 		SELECT count(*)
		FROM member
		WHERE statecode <> '0'
	]]>
 	</select>
 	
 	<!-- member 디테일 list  총 갯수 -->
 	<select id="memberListCnt" resultType="int">
	 	SELECT count(*)
		FROM(
  			SELECT  member.id,count(*),member.statecode
   			FROM member
		    INNER JOIN report
		    ON report.reported = member.id
		    WHERE report.reportstate = 2
   			GROUP BY  member.id,member.statecode
		)
 	</select>
 	
 	
 	<!-- 회원 신고내용 -->
 	<select id="memberReport" resultType="String">
 		SELECT reportcontent
		FROM report
		WHERE reportid = #{reportid}
 	</select>
 	
 	<!-- 회원 신고 갯수 -->
 	<select id="memberReportCnt" resultType="int">
 	SELECT count(*)
	FROM report
	WHERE reportstate = 2 AND reported = #{id}
 	</select>
 	
 	<!-- 신고 list -->
 	<select id="reportList" resultType="kr.co.thefesta.admin.domain.ReportDTO" >
	 	<![CDATA[
	 		SELECT reportid, reportcontent, reporter, rbid, rbrno, rfrno, reportdate, reported
			FROM (
	    		SELECT rownum  as rn, reportid, reportcontent, reporter, rbid, rbrno, rfrno, reportdate, reported
	   			FROM report
	    		WHERE reportstate = '1' AND rownum <= #{pageNum} * #{amount}
	    		ORDER BY reportid DESC
			)
			WHERE rn > (#{pageNum} -1) * #{amount}
		]]>
 	</select>
 	
 	<!-- 신고 list 갯수 -->
 	<select id="reportListCnt" resultType="int">
 		SELECT count(*)
		FROM report
		WHERE reportstate = '1'
 	</select>
 	
 	
 	
 	<!-- 회원 신고글 삭제 -->
 	<delete id="memberReportDelete">
	 	DELETE
		FROM report 
		WHERE reportid = #{reportid}
 	</delete>
 	
 	<!-- 신고처리상태 변경(reportstate->2) -->
 	<update id="reportstateChange">
 		UPDATE report
		SET reportstate= 2
		WHERE reportid = #{reportid}
 	</update>
 	
 	<!-- 회원 신고당한 횟수 update-->
 	<update  id="memberReportnumUpdate" parameterType="java.util.Map">
 		UPDATE member
		SET reportnum = #{num} + 1
		WHERE id=#{id}
 	</update>
 	
 	<!-- 회원 신고당한 횟수 select -->
 	<select id="memberReportnumRead" resultType="int">
 		SELECT reportnum
		FROM member
		WHERE id=#{id}
 	</select>
 	
 	<!--회원 신고글 상태변경(4) -->
 	<delete id="memberReportstateChange4">
 		UPDATE report
		SET reportstate = 4
		WHERE reported = #{id}
 	</delete>
 	<!--회원 신고글 상태변경(4) -->
 	<delete id="memberReportstateChange3">
 		UPDATE report
		SET reportstate = 3
		WHERE reportid = #{reportid}
 	</delete>
 	
 	
 	<!-- 축제list & 축제 문의 -->
 	<select id="festaList" resultType="kr.co.thefesta.admin.domain.QuestionDTO">
 	<![CDATA[
 	WITH RankedFesta AS (
	    SELECT title, eventstartdate, eventenddate, contentid, addr1, questioncount, ROW_NUMBER() OVER (ORDER BY questioncount DESC) AS rn
	    FROM (
	        SELECT festa.title, festa.eventstartdate, festa.eventenddate, festa.contentid, festa.addr1, COUNT(*) AS questioncount
	        FROM admin_question
	        INNER JOIN festa ON festa.contentid = admin_question.contentid
	        GROUP BY festa.title, festa.eventstartdate, festa.eventenddate, festa.contentid, festa.addr1
	        UNION
	        SELECT title, eventstartdate, eventenddate, contentid, addr1, 0 AS questioncount
	        FROM festa
	        WHERE
	        	contentid NOT IN (
	                SELECT contentid
	                FROM admin_question
	            )
	    )
	)
	
	SELECT title, eventstartdate, eventenddate, contentid, addr1, questioncount
	FROM RankedFesta
	WHERE rn BETWEEN (#{pageNum} - 1) * #{amount} + 1 AND #{pageNum} * #{amount}
	]]>
 	</select>
 	
 	
 	<!-- 축제 count -->
 	<select id="festaListCnt" resultType="int">
 		SELECT count(*)
 		FROM festa
 		WHERE contentid > 0
 	</select>
 	
 	<!-- 건의 list -->
 	<select id="questionList" parameterType="java.util.Map" resultType="kr.co.thefesta.admin.domain.QuestionDTO">
 	<![CDATA[
 		SELECT questionid, questioncontent, questiondate, id, contentid
		FROM(
    		SELECT questionid, questioncontent, questiondate, id, rownum  as rn, contentid
    		FROM(
        		SELECT admin_question.questionid, admin_question.questioncontent, admin_question.questiondate, admin_question.id, festa.contentid
		        FROM admin_question 
		        INNER JOIN festa
		        ON admin_question.contentid = festa.contentid
		        WHERE festa.contentid = #{contentid}
   			)
    		WHERE rownum <= #{pageNum} * #{amount}
		)
		WHERE rn > (#{pageNum} -1) * #{amount}
	]]>
 	</select>
 	
 	<!-- 건의 갯수 -->
 	<select id="questionListCnt" resultType="int">
	 	SELECT count(*)
		FROM admin_question
		WHERE contentid = #{contentid}
 	</select>
 	
 	<!-- 건의 삭제 -->
 	<delete id="questionDelete">
 		DELETE
		FROM    admin_question
		WHERE   questionid = #{questionid}
 	</delete>
 	
 	<!-- 축제 삭제 -->
 	<delete id="festaDelete">
 		DELETE
		FROM festa
		WHERE contentid = #{contentid}
 	</delete>
 	
 	<!-- 게시판list(리뷰, 자유) -->
 	<select id="boardlist" resultType="kr.co.thefesta.board.domain.BoardDTO">
 	<![CDATA[
 		SELECT bid, bno, btitle, bcontent, bregist, id
		FROM(
    		SELECT bid, bno, btitle, bcontent, bregist, id, bstatecode, rownum as rn
        	FROM(
	            SELECT bid, bno, btitle, bcontent, bregist, id, bstatecode
	            FROM board
	            ORDER BY bregist DESC
        	)
    		WHERE bstatecode = 'Y' AND (bno = 1 OR bno = 2) AND rownum <= #{pageNum} * #{amount}
		)
		WHERE rn > (#{pageNum} -1) * #{amount}
	]]>
 	</select>
 	
 	<!-- 게시판list(리뷰, 자유) 갯수 -->
 	<select id="boardListCnt" resultType="int">
 		SELECT count(*)
		FROM    board
		WHERE   (bno = 1 OR bno = 2) AND bstatecode = 'Y'
 	</select>
 	
 	<!-- 문의사항list -->
 	<select id="adminQuestionList" resultType="kr.co.thefesta.board.domain.BoardDTO">
 	<![CDATA[
	 	SELECT bid, bno, btitle, bcontent, bregist, id
		FROM(
    		SELECT bid, bno, btitle, bcontent, bregist, id, bstatecode, rownum as rn
        	FROM(
            	SELECT bid, bno, btitle, bcontent, bregist, id, bstatecode
            	FROM board
            	ORDER BY bregist DESC
        	)
    		WHERE bstatecode = 'Y' AND bno = 3 AND rownum <= #{pageNum} * #{amount}
		)
		WHERE rn > (#{pageNum} -1) * #{amount}
	]]>
 	</select>
 	
 	<!-- 문의사항 갯수 -->
 	<select id="adminQuestionListCnt" resultType="int">
 	SELECT count(*)
	FROM    board
	WHERE   bno = 3 AND bstatecode= 'Y'
 	</select>
 	
 	<!--문의게시판 bstatecode = c 변경 -->
 	<update id="adminQuestionDelete">
 		UPDATE 	board
		SET 	bstatecode = 'C'
		WHERE   bid = #{bid}
 	</update>
 	
 	
 	
 	<!-- 건의 등록 -->
 	<insert id="questionRegister">
 		INSERT INTO admin_question(questionid, questioncontent, id, contentid)
		VALUES (seq_questionid.nextval, #{questioncontent}, #{id}, #{contentid})
 	</insert>
 	
 	<!-- 축제 댓글 신고등록 -->
 	<insert id="festaReplyReport">
 		INSERT INTO report(reportid, reportcontent, reporter, reported, rfrno)
		VALUES (seq_reportid.nextval, #{reportcontent}, #{reporter}, #{reported}, #{rfrno})
 	</insert>
 	
 	<!-- 게시글 댓글 신고등록 -->
 	<insert id="boardReplyReport">
 		INSERT INTO report(reportid, reportcontent, reporter, reported, rbrno)
		VALUES (seq_reportid.nextval, #{reportcontent}, #{reporter}, #{reported}, #{rbrno})
		<selectKey keyProperty="rbrno" resultType="int" order="AFTER">
         SELECT brno 
         FROM board_reply
         WHERE brno = #{rbrno}
      </selectKey>
 	</insert>
 	
 	<!-- 게시글 신고등록 -->
 	<insert id="boardReport">
 		INSERT INTO report(reportid, reportcontent, reporter, reported, rbid)
		VALUES (seq_reportid.nextval, #{reportcontent}, #{reporter}, #{reported}, #{rbid})
		<selectKey keyProperty="rbid" resultType="int" order="AFTER">
         SELECT bno 
         FROM board
         WHERE bid = #{rbid}
      </selectKey>
 	</insert>
 	
 	
 	<!-- 축제 자동삭제처리(1년기준) -->
 	<delete id="festivalSchdulerDelete">
 		DELETE 
 		FROM	festa
 		WHERE	eventenddate = #{festaDeleteTime}
 	</delete>

	<!-- 게시글 댓글 자동삭제처리할 번호(bid, brno) -->
 	<!-- 1번 -->
 	<select id="boardSchuderList" resultType="Integer">
 	<![CDATA[
 	SELECT  c.bid
	FROM (
    	SELECT bid
    	FROM (
	        SELECT  board.bid
	        FROM    board
	        WHERE   board.bstatecode = 'N'
    	)a
    	LEFT JOIN (
	        SELECT  report.rbid
	        FROM    report
    	)b
    	ON a.bid = b.rbid
    	WHERE b.rbid is NULL
	)c
	LEFT JOIN (
    	SELECT  board_reply.bid
        FROM    board_reply
        WHERE   board_reply.brstatecode = 'Y'
        UNION
        SELECT  bid
        FROM    board_reply
        INNER JOIN   (
        	SELECT  report.rbrno
            FROM    report
            WHERE   report.reportstate <> 4
        )a
        ON  board_reply.brno = a.rbrno
	)d
	ON c.bid = d.bid
	WHERE   d.bid is NULL
	]]>
 	</select>
 	<!-- 2번 -->
 	<select id="boardReplySchuderList" resultType="Integer">
 	<![CDATA[
 	SELECT brno
	FROM (
	    SELECT  brno
	    FROM (
	        SELECT  board_reply.brno, board_reply.bid
	        FROM    board_reply
	        WHERE   board_reply.brstatecode = 'N'
	    )
	    GROUP BY brno
	)a
	LEFT JOIN (
	    SELECT rbrno
	    FROM (
	        SELECT  report.rbrno
	        FROM    report
	    )
	    GROUP BY rbrno
	)b
	ON a.brno = b.rbrno
	WHERE b.rbrno is NULL
	]]>
 	</select>
 	<!-- 3번-->
 	<select id="boardReportSchuderList" resultType="Integer">
 	<![CDATA[
 	SELECT b.bid
	FROM(
    	SELECT  bid
    	FROM(
        	SELECT a.bid, a.brno, report.reportid
        	FROM (
            	SELECT board_reply.brno, board.bid 
            	FROM board_reply
            	INNER JOIN board
            	ON board.bid = board_reply.bid
            	WHERE board_reply.brstatecode = 'N' AND board.bstatecode = 'N'
        	) a
	        INNER JOIN report
	        ON report.rbid = a.bid 
	        WHERE report.reportstate = 4
    	)
    	GROUP BY bid
	) b
	LEFT JOIN (
    	SELECT  bid
    	FROM(
            SELECT a.bid, a.brno, report.reportid
        	FROM (
            	SELECT board_reply.brno, board.bid 
            	FROM board_reply
            	INNER JOIN board
            	ON board.bid = board_reply.bid
            	WHERE board_reply.brstatecode = 'N' AND board.bstatecode = 'N'
        	) a
	        INNER JOIN report
	        ON report.rbid = a.bid 
	        WHERE report.reportstate <> 4
    	)
    	GROUP BY bid
	)c
	ON b.bid = c.bid
    LEFT JOIN (
        SELECT  bid
    	FROM(
            SELECT a.bid, a.brno, report.reportid 
            FROM (
                SELECT board_reply.brno, board.bid
                FROM board_reply
                INNER JOIN board
                ON board.bid = board_reply.bid
                WHERE board_reply.brstatecode = 'N' AND board.bstatecode = 'N'
            ) a
            INNER JOIN report
            ON report.rbrno = a.brno
            WHERE report.reportstate <> 4
    	)
    	GROUP BY bid
	)d
    ON d.bid = b.bid
	WHERE c.bid is NULL AND d.bid is NULL
 	]]>
 	</select>
 	<!-- 4번 -->
 	<select id="boardReplyReportSchuderList" resultType="Integer">
 	SELECT brno
	FROM(
		SELECT  a.brno
		FROM (
   			SELECT board_reply.brno
   			FROM board_reply
		    WHERE board_reply.brstatecode = 'N'
		) a
	INNER JOIN report
	ON report.rbrno = a.brno
	WHERE report.reportstate = 4
	)
	GROUP BY brno
 	</select>
 	
 	
 	<!-- 게시글 및 게시글 댓글 자동삭제처리(1년기준) -->
 	<!-- 1번 -->
 	<delete id="boardSchuderListDelete" parameterType="hashMap">
 		DELETE 
 		FROM	board
 		WHERE	bregist = #{time} AND bid   
 		<trim prefix="in (" suffix=")" suffixOverrides=",">
			<foreach  item="item" collection="boardSchuderList">
				#{ item },
			</foreach>
		</trim>
 	</delete>
 	<!-- 2번 -->
 	<delete id="boardReplySchuderListDelete" parameterType="hashMap">
 		DELETE 
 		FROM	board_reply
 		WHERE	brregist = #{time} AND brno   
 		<trim prefix="in (" suffix=")" suffixOverrides=",">
			<foreach  item="item" collection="boardReplySchuderList">
				#{ item },
			</foreach>
		</trim>
 	</delete>
 	<!-- 3번 -->
 	<delete id="boardReportSchuderListDelete" parameterType="hashMap">
 		DELETE 
 		FROM	board
 		WHERE	bregist = #{time} AND bid   
 		<trim prefix="in (" suffix=")" suffixOverrides=",">
			<foreach  item="item" collection="boardReportSchuderList">
				#{ item },
			</foreach>
		</trim>
 	</delete>
 	<!-- 4번 -->
 	<delete id="boardReplyReportSchuderListDelete" parameterType="hashMap">
 		DELETE 
 		FROM	board_reply
 		WHERE	brregist = #{time} AND brno   
 		<trim prefix="in (" suffix=")" suffixOverrides=",">
			<foreach  item="item" collection="boardReplyReportSchuderList">
				#{ item },
			</foreach>
		</trim>
 	</delete>
 	
 	<!-- 문의 게시글 및 관리자댓글 select -->
 	<!-- 문의 게시글 select -->
 	<select id="boardQuestionSchuderList" resultType="Integer">
	 	SELECT  bid
		FROM    board
		WHERE   bstatecode = 'C'
 	</select>
 	<!-- 관리자댓글 select -->
 	<select id="boardQuestionReplySchuderList" resultType="Integer">
	 	SELECT  b.brno
		FROM    (
		    SELECT  bid
		    FROM    board
		    WHERE   bstatecode = 'C'
		)a
		INNER JOIN  (
		    SELECT  bid, brno
		    FROM    board_reply
		)b
		ON  a.bid = b.bid
 	</select>
 	
 	<!-- 문의 게시글 및 관리자댓글 delete -->
 	<!-- 문의 게시글 delete -->
 	<delete id="boardQuestionSchuderListDelete" parameterType="hashMap">
 		DELETE 
 		FROM	board
 		WHERE	bregist = #{time} AND bid   
 		<trim prefix="in (" suffix=")" suffixOverrides=",">
			<foreach  item="item" collection="boardQuestionSchuderList">
				#{ item },
			</foreach>
		</trim>
 	</delete>
 	<!-- 관리자댓글 delete -->
 	<delete id="boardQuestionReplySchuderListDelete" parameterType="hashMap">
 		DELETE 
 		FROM	board_reply
 		WHERE	brregist = #{time} AND brno   
 		<trim prefix="in (" suffix=")" suffixOverrides=",">
			<foreach  item="item" collection="boardQuestionReplySchuderList">
				#{ item },
			</foreach>
		</trim>
 	</delete>
 	
 </mapper>