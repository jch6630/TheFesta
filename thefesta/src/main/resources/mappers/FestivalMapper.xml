<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="FestivalMapper">
 	<insert id="insertApi">
 		INSERT INTO festa(contentid, title, eventstartdate, eventenddate, addr1, eventintro, eventtext, homepage, agelimit, sponsor1, sponsor1tel, sponsor2, sponsor2tel, usetimefestival, playtime, firstimage, firstimage2, acode, scode, mapx, mapy) 
		VALUES(#{contentid}, #{title}, #{eventstartdate}, #{eventenddate}, #{addr1, jdbcType=VARCHAR}, #{eventintro, jdbcType=VARCHAR}, #{eventtext, jdbcType=VARCHAR}, #{homepage, jdbcType=VARCHAR}, #{agelimit, jdbcType=VARCHAR}, #{sponsor1, jdbcType=VARCHAR}, #{sponsor1tel, jdbcType=VARCHAR}, #{sponsor2, jdbcType=VARCHAR}, #{sponsor2tel, jdbcType=VARCHAR}, #{usetimefestival, jdbcType=VARCHAR}, #{playtime, jdbcType=VARCHAR}, #{firstimage, jdbcType=VARCHAR}, #{firstimage2, jdbcType=VARCHAR}, #{acode, jdbcType=INTEGER}, #{scode, jdbcType=INTEGER}, #{mapx, jdbcType=DOUBLE}, #{mapy, jdbcType=DOUBLE})
 	</insert>
 	
 	<insert id="insertImg">
 		INSERT INTO festa_image(ffileno, contentid, serialnum, originimgurl, smallimageurl)
 		VALUES(seq_ffileno.nextval, #{contentid}, #{serialnum}, #{originimgurl, jdbcType=VARCHAR}, #{smallimageurl, jdbcType=VARCHAR})
 	</insert>
 	
 	<select id="getImg" resultType="kr.co.thefesta.festival.domain.FestivalImageDTO">
 		SELECT *
		FROM festa_image
		WHERE contentid = #{contentid}
 	</select>
 	
 	<insert id="insertAreaCode">
 		INSERT INTO festa_area(ano, acode, aname, scode, sname)
 		VALUES(seq_ano.nextval, #{acode}, #{aname}, #{scode}, #{sname})
 	</insert>
 	
 	<select id="getAreaCode" resultType="kr.co.thefesta.festival.domain.AreaCodeDTO">
 		SELECT *
		FROM festa_area
 	</select>
 	
 	<sql id="criteria">
	    <trim prefix="(" suffix=") AND " prefixOverrides="OR">
	        <choose>
	            <when test="keyword != null and keyword != ''">
	                title LIKE '%' || #{keyword} || '%'
	            </when>
	        </choose>
	    </trim>
	</sql>
 	
 	<select id="getListWithPaging" resultType="kr.co.thefesta.festival.domain.FestivalDTO">
		<![CDATA[
			SELECT *
			FROM (
					SELECT rownum rn, a.*
					FROM (
			                SELECT *
			                FROM festa
			                ORDER BY eventstartdate DESC,
			                		 title ASC
			              ) a
					WHERE 
		]]>	
		<include refid="criteria"></include>
		<![CDATA[
					rownum <= #{pageNum} * #{amount}
				 )
			WHERE rn > (#{pageNum}-1)*#{amount}
		]]>
	</select>
	
	<select id="getTotalCnt" resultType="int">
		SELECT COUNT(*)
		FROM festa
		WHERE
		<include refid="criteria"></include>
		contentid > 0
	</select>
	
	<update id="updateFestival">
		UPDATE festa
		SET contentid=#{contentid},
		 	title=#{title}, 
		 	eventstartdate=#{eventstartdate}, 
		 	eventenddate=#{eventenddate}, 
		 	addr1=#{addr1, jdbcType=VARCHAR}, 
		 	eventintro=#{eventintro, jdbcType=VARCHAR}, 
		 	eventtext=#{eventtext, jdbcType=VARCHAR}, 
		 	homepage=#{homepage, jdbcType=VARCHAR}, 
		 	agelimit=#{agelimit, jdbcType=VARCHAR}, 
		 	sponsor1=#{sponsor1, jdbcType=VARCHAR}, 
		 	sponsor1tel=#{sponsor1tel, jdbcType=VARCHAR}, 
		 	sponsor2=#{sponsor2, jdbcType=VARCHAR}, 
		 	sponsor2tel=#{sponsor2tel, jdbcType=VARCHAR}, 
		 	usetimefestival=#{usetimefestival, jdbcType=VARCHAR}, 
		 	playtime=#{playtime, jdbcType=VARCHAR}, 
		 	firstimage=#{firstimage, jdbcType=VARCHAR}, 
		 	firstimage2=#{firstimage2, jdbcType=VARCHAR}, 
		 	acode=#{acode, jdbcType=INTEGER}, 
		 	scode=#{scode, jdbcType=INTEGER}, 
		 	mapx=#{mapx, jdbcType=DOUBLE}, 
		 	mapy=#{mapy, jdbcType=DOUBLE}
		WHERE contentid = #{contentid}
	</update>
	
	<select id="searchImg" resultType="int">
		SELECT COUNT(*)
		FROM festa_image
		WHERE serialnum = #{serialnum}
	</select>
	
	<select id="getTime" resultType="string">
		SELECT sysdate
		FROM dual
	</select>
	
	<select id="searchLike" resultType="int">
		SELECT count(*)
		FROM festa_like
		WHERE id = #{id}
		AND contentid = #{contentid}
	</select>
	
	<insert id="insertLike">
		MERGE INTO festa_like f
		USING (SELECT 1 FROM dual) dual_dummy
		ON (f.contentid = #{contentid} AND f.id = #{id})
		WHEN NOT MATCHED THEN
		INSERT (lno, contentid, id)
		VALUES(seq_lno.nextval, #{contentid}, #{id})
	</insert>
	
	<delete id="deleteLike">
		DELETE FROM festa_like
		WHERE id=#{id}
		AND contentid = #{contentid}
	</delete>
 </mapper>