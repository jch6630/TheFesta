<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="AdminMapper">
 	<!-- member 테이블 회원정보 list -->
 	<select id="memberList" resultType="kr.co.thefesta.member.domain.MemberDTO">
	 	<![CDATA[
	 		SELECT id,statecode,finalaccess, reportnum, reportstate
			FROM(
    			SELECT rownum  as rn,id,statecode,finalaccess, reportnum, reportstate
    			FROM(
			        SELECT  member.id, member.statecode, member.finalaccess, report.reportstate, count(*) as reportnum
			        FROM member
			        INNER JOIN report
			        ON report.reported = member.id
			        GROUP BY  member.id, member.statecode, member.finalaccess, report.reportstate
    			)
   			 	WHERE reportstate = 2 AND rownum <= #{pageNum} * #{amount}
			)
			WHERE rn>(#{pageNum} -1) * #{amount}
	     ]]>
 	</select>
 	
 	<!-- member 회원 디테일 정보 -->
 	<select id="memberDetail" resultType="kr.co.thefesta.admin.domain.ReportDTO" parameterType="java.util.Map">
 	<![CDATA[
 		SELECT reportid,reportcontent,reporter,reported, rbrno, rfrno, rbid, reportdate
		FROM(
    		SELECT reportid,reportcontent,reporter,reported, rbrno, rfrno, rbid, reportdate, rownum  as rn
    		FROM (
        		SELECT  report.reportid, report.reportcontent, report.reporter, report.reported, report.rbrno, report.rfrno, report.rbid, report.reportdate,
        		member.statecode, member.finalaccess
				FROM report
				INNER JOIN member
				ON report.reported = member.id
				WHERE member.id = #{id} AND report.reportstate = 2
				ORDER BY report.reportid DESC
    		)
    		WHERE rownum<=#{pageNum} * #{amount}
		)
		WHERE rn>(#{pageNum} -1) * #{amount}
	]]>
 	</select>
 	
 	<!-- 회원 신고내용 -->
 	<select id="memberReport" resultType="String">
 		SELECT reportcontent
		FROM report
		WHERE reportid = #{reportid}
 	</select>
 	
 	<!-- 회원 신고 갯수 -->
 	<select id="memberReportCnt" resultType="int">
 	SELECT count(*)
	FROM report
	WHERE reportstate = 2 AND reported = #{id}
 	</select>
 	
 	<!-- 신고 list -->
 	<select id="reportList" resultType="kr.co.thefesta.admin.domain.ReportDTO" >
	 	<![CDATA[
	 		SELECT reportid, reportcontent, reporter, rbid, rbrno, rfrno, reportdate, reported
			FROM (
	    		SELECT rownum  as rn, reportid, reportcontent, reporter, rbid, rbrno, rfrno, reportdate, reported
	   			FROM report
	    		WHERE reportstate = '1' AND rownum <= #{pageNum} * #{amount}
	    		ORDER BY reportid ASC
			)
			WHERE rn > (#{pageNum} -1) * #{amount}
		]]>
 	</select>
 	
 	<!-- 신고 list 갯수 -->
 	<select id="reportListCnt" resultType="int">
 		SELECT count(*)
		FROM report
		WHERE reportstate = '1'
 	</select>
 	
 	<!-- member list 총 갯수 -->
 	<select id="memberListCnt" resultType="int">
	 	SELECT count(*)
		FROM(
  			SELECT  member.id,count(*),member.statecode
   			FROM member
		    INNER JOIN report
		    ON report.reported = member.id
		    WHERE report.reportstate = 2
   			GROUP BY  member.id,member.statecode
		)
 	</select>
 	
 	<!-- 회원 신고글 삭제 -->
 	<delete id="memberReportDelete">
	 	DELETE
		FROM report 
		WHERE reportid = #{reportid}
 	</delete>
 	
 	<!-- 신고처리상태 변경(reportstate->2) -->
 	<update id="reportstateChange">
 		UPDATE report
		SET reportstate= 2
		WHERE reportid = #{reportid}
 	</update>
 	
 	<!-- 회원 신고당한 횟수 update-->
 	<update  id="memberReportnumUpdate" parameterType="java.util.Map">
 		UPDATE member
		SET reportnum = #{num} + 1
		WHERE id=#{id}
 	</update>
 	
 	<!-- 회원 신고당한 횟수 select -->
 	<select id="memberReportnumRead" resultType="int">
 		SELECT reportnum
		FROM member
		WHERE id=#{id}
 	</select>
 	
 	<delete id="memberReportAllDelete">
 		DELETE 
		FROM report
		WHERE reported = #{id}
 	</delete>
 	
 	
 	<!-- 축제list & 축제 문의list -->
 	<select id="festaList" resultType="kr.co.thefesta.admin.domain.QuestionDTO">
 	<![CDATA[
 		SELECT title,eventstartdate,eventenddate,contentid, addr1, questioncount
		FROM(
    		SELECT title,eventstartdate,eventenddate,contentid, addr1, questioncount, rownum  as rn
    		FROM (
        		SELECT festa.title, festa.eventstartdate, festa.eventenddate, festa.contentid, festa.addr1, count(*) as questioncount
        		FROM admin_question 
        		INNER JOIN festa
        		ON festa.contentid = admin_question.contentid
        		GROUP BY  festa.title,festa.eventstartdate,festa.eventenddate,festa.contentid,festa.addr1
        		ORDER BY festa.eventstartdate DESC
    		)
    		WHERE rownum <= #{pageNum} * #{amount}
		)
		WHERE rn > (#{pageNum} -1) * #{amount}
	]]>
 	</select>
 	
 	<!-- 축제 list & 축제 문의 없음-->
 	<select id="festaListAll" resultType="kr.co.thefesta.admin.domain.QuestionDTO">
	 	<![CDATA[
	 		SELECT title, eventstartdate, eventenddate, contentid, addr1
       		FROM(
            	SELECT title, eventstartdate, eventenddate, contentid, addr1, rownum  as rn
            	FROM festa 
            	WHERE contentid not in(
                	SELECT contentid
                	FROM admin_question
            	) AND rownum <= #{pageNum} * #{amount}
            	ORDER BY festa.eventstartdate DESC
        	)
        	WHERE rn > (#{pageNum} -1) * #{amount}
	    ]]>
 	</select>
 	
 	<!-- 축제 count -->
 	<select id="festaListCnt" resultType="int">
 		SELECT count(*)
 		FROM festa
 		WHERE contentid > 0
 	</select>
 	
 	<!-- 건의 list -->
 	<select id="questionList" resultType="kr.co.thefesta.admin.domain.QuestionDTO">
 	<![CDATA[
 		SELECT questionid, questioncontent, questiondate, id, contentid
		FROM(
    		SELECT questionid, questioncontent, questiondate, id, rownum  as rn, contentid
    		FROM(
        		SELECT admin_question.questionid, admin_question.questioncontent, admin_question.questiondate, admin_question.id, festa.contentid
		        FROM admin_question 
		        INNER JOIN festa
		        ON admin_question.contentid = festa.contentid
		        WHERE festa.contentid = #{contentid}
   			)
    		WHERE rownum <= #{pageNum} * #{amount}
		)
		WHERE rn > (#{pageNum} -1) * #{amount}
	]]>
 	</select>
 	
 	<!-- 건의 갯수 -->
 	<select id="questionListCnt" resultType="int">
	 	SELECT count(*)
		FROM admin_question
		WHERE contentid = #{contentid}
 	</select>
 	
 	<!-- 축제 삭제 -->
 	<delete id="festaDelete">
 		DELETE
		FROM festa
		WHERE contentid = #{contentid}
 	</delete>
 	
 	<!-- 축제 이미지 삭제 -->
 	<delete id="festaImageDelete">
 		DELETE
		FROM festa_image
		WHERE contentid = #{contentid}
 	</delete>
 	
 	<!-- 축제 좋아요 삭제 -->
 	<delete id="festaLikeDelete">
 		DELETE
		FROM festa_like
		WHERE contentid = #{contentid}
 	</delete>
 	
 	<!-- 축제 건의 삭제 -->
 	<delete id="questionDelete">
 		DELETE
		FROM admin_question
		WHERE contentid = #{contentid}
 	</delete>
 	
 	<!-- 축제 댓글 -->
 	<delete id="festaReplyDelete">
 		DELETE
		FROM festa_reply
		WHERE contentid = #{contentid}
 	</delete>
 	
 	<!-- 삭제할 축제 댓글 번호 -->
 	<select id="deleteReportidSelect" resultType="kr.co.thefesta.festival.domain.FestivalReplyDTO">
	 	SELECT festa_reply.frno
	    FROM    festa_reply
	    INNER JOIN festa
	    ON  festa_reply.contentid = festa.contentid
	    WHERE  festa_reply.contentid = #{contentid}
 	</select>
 	
 	<!-- 축제 댓글 신고삭제 -->
 	<delete id="reportFrnoDelete" parameterType="java.util.ArrayList">
 		DELETE
		FROM report
		<trim prefix="WHERE rfrno in (" suffix=") " suffixOverrides=",">
			<foreach collection="list" item="item" >
					#{item.frno},
			</foreach>
		</trim>
 	</delete>
 	
 	<!-- 건의 등록 -->
 	<insert id="questionRegister">
 		INSERT INTO admin_question(questionid, questioncontent, id, contentid)
		VALUES (seq_questionid.nextval, #{questioncontent}, #{id}, #{contentid})
 	</insert>
 	
 	<!-- 축제 댓글 신고등록 -->
 	<insert id="festaReplyReport">
 		INSERT INTO report(reportid, reportcontent, reporter, reported, rfrno)
		VALUES (seq_reportid.nextval, #{reportcontent}, #{reporter}, #{reported}, #{rfrno})
 	</insert>
 	
 	<!-- 게시글 댓글 신고등록 -->
 	<insert id="boardReplyReport">
 		INSERT INTO report(reportid, reportcontent, reporter, reported, rbrno)
		VALUES (seq_reportid.nextval, #{reportcontent}, #{reporter}, #{reported}, #{rbrno})
		<selectKey keyProperty="rbrno" resultType="int" order="AFTER">
         SELECT brno 
         FROM board_reply
         WHERE brno = #{rbrno}
      </selectKey>
 	</insert>
 	
 	<!-- 게시글 신고등록 -->
 	<insert id="boardReport">
 		INSERT INTO report(reportid, reportcontent, reporter, reported, rbid)
		VALUES (seq_reportid.nextval, #{reportcontent}, #{reporter}, #{reported}, #{rbid})
		<selectKey keyProperty="rbid" resultType="int" order="AFTER">
         SELECT bno 
         FROM board
         WHERE bid = #{rbid}
      </selectKey>
 	</insert>
 </mapper>